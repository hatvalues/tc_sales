{
    "contents" : "## ---- Initial_Load ----\n# original link\nlink <- \"https://raw.githubusercontent.com/julianhatwell/TC_SalesQuotas/master/TC_SalesQuota.csv\"\n# local file\n#link <- \"C:\\\\Dev\\\\Study\\\\R\\\\Tanc_investigation\\\\TC_SalesQuota.csv\"\nraw.data <- read_csv(link)\nn = nrow(raw.data)\nattach(raw.data)\nraw.data$Group <- as.factor(Group)\nraw.data$KSales <- Sales/1000\nraw.data$KQuota <- Quota/1000\nraw.data$OnTarget <- (Sales-Quota)/Quota*100\nraw.data$MetTarget <- raw.data$OnTarget >= 0\nattach(raw.data)\n# means\n# pop\nmn_Quo_P <- mean(KQuota)\nmn_Sal_P <- mean(KSales)\nmn_Tar_P <- mean(OnTarget)\n# Grp A\nmn_Quo_A <- mean(KQuota[Group == \"A\"])\nmn_Sal_A <- mean(KSales[Group == \"A\"])\nmn_Tar_A <- mean(OnTarget[Group == \"A\"])\n# Grp B\nmn_Quo_B <- mean(KQuota[Group == \"B\"])\nmn_Sal_B <- mean(KSales[Group == \"B\"])\nmn_Tar_B <- mean(OnTarget[Group == \"B\"])\n# St Devs\n# Pop\nsd_Quo_P <- sd(KQuota)\nsd_Sal_P <- sd(KSales)\nsd_Tar_P <- sd(OnTarget)\n# Grp A\nsd_Quo_A <- sd(KQuota[Group == \"A\"])\nsd_Sal_A <- sd(KSales[Group == \"A\"])\nsd_Tar_A <- sd(OnTarget[Group == \"A\"])\n# Grp B\nsd_Quo_B <- sd(KQuota[Group == \"B\"])\nsd_Sal_B <- sd(KSales[Group == \"B\"])\nsd_Tar_B <- sd(OnTarget[Group == \"B\"])\n\n# centering each group in its attainment mean\nraw.data$Sales_C <- KSales - ifelse(Group == \"A\", mn_Sal_A, mn_Sal_B)\nraw.data$Quota_C <- KQuota - ifelse(Group == \"A\", mn_Quo_A, mn_Quo_B)\nraw.data$OnTarget_C <- OnTarget - ifelse(Group == \"A\", mn_Tar_A, mn_Tar_B)\nattach(raw.data)\n\n## ---- group_B_cluster_params ----\nlowOutlierBoundary <- -30\nclusterOneBoundary <- -1\nclusterTwoBoundary <- 15.5\nhighOutlierBoundary <- 40\ncluster1 <- Group == \"B\" & \n  OnTarget < clusterOneBoundary & \n  OnTarget > lowOutlierBoundary\ncluster2 <- Group == \"B\" & \n  OnTarget < clusterTwoBoundary & \n  OnTarget > clusterOneBoundary\ncluster3 <- Group == \"B\" & \n  OnTarget < highOutlierBoundary & \n  OnTarget > clusterTwoBoundary\n\n## ---- group_B_cluster_analysis ----\nbasicClustAnal <- data.frame(\n    means = \n    c(mean(OnTarget[cluster1])\n     , mean(OnTarget[cluster2])\n     , mean(OnTarget[cluster3]))\n   , members =\n    c(sum(cluster1)\n    , sum(cluster2)\n    , sum(cluster3))\n   , row.names = \n    c(\"Cluster.1\"\n    , \"Cluster.2\"\n    , \"Cluster.3\"))\nkable(basicClustAnal)\n\n## ---- basic_lm ----\nlm1 <- lm(OnTarget ~ Group * Quota_C -1)\nraw.data$predict.lm1 <- lm1$fitted.values\nattach(raw.data)\ncoef(lm1)\n(list(root.mean.squared.error = sqrt(mean((OnTarget - lm1$fitted.values)^2))))\n\n## ---- missing_var_from_variance ----\nset.seed(103)\nk <- 20\nwndws <- cbind(lwr = 1:(n-k+1), idx = floor(k/2):(n-floor(k/2)), upr = k:n)\n\nrsd <- as.numeric(rep(NA, n))\nfor (i in 1:dim(wndws)[1]) {\n  rsd[wndws[i,\"idx\"]] <-  sd(raw.data$OnTarget[order(raw.data$Quota, decreasing = FALSE)][wndws[i,\"lwr\"]:wndws[i,\"upr\"]])\n}\n# bootstrap missing rolling window ends\nmissing <- matrix(nrow = 2, ncol = 3)\nmissing[1,] <- c(1\n                 , wndws[1,\"idx\"]-1\n                 , length(1:(wndws[1,\"idx\"]-1))\n)\nmissing[2,] <- c(wndws[nrow(wndws)-floor(k/2),\"idx\"]+floor(k/2)+1\n                 , n\n                 , length((wndws[nrow(wndws)-floor(k/2),\"idx\"]+floor(k/2)+1):n)\n)\n# lower end\nrsd[missing[1,1]:missing[1,2]] <- sample(rsd[(missing[1,2]+1):(missing[1,2]+1+k)], missing[1,3], replace = TRUE)\n# upper end\nrsd[missing[2,1]:missing[2,2]] <- sample(rsd[(missing[2,1]-1):(missing[2,1]-1-k)], missing[2,3], replace = TRUE)\n\nrsd <- cbind(rsd, id = order(Quota))\nraw.data$rollingSD <- rsd[order(rsd[,\"id\"]),\"rsd\"]\nattach(raw.data)\n\n## ---- mvar_lm ----\nlm.mvar <- lm(OnTarget~Group * Quota_C + rollingSD -1)\nraw.data$predict.lm.mvar <- lm.mvar$fitted.values\nattach(raw.data)\ncoef(lm.mvar)\n(list(root.mean.squared.error = sqrt(mean((OnTarget - lm1$fitted.values)^2))))\n\n## ---- Statistics ----\nhead(select(raw.data, Sales, Quota, Attainment, OnTarget, MetTarget, Group))\nsummary(select(raw.data, Sales, Quota, Attainment, OnTarget, MetTarget, Group))\n# means\nkable(data.frame(\n  Population_mean_KQuota = mn_Quo_P\n  , Population_mean_KSales = mn_Sal_P\n  , Population_mean_OnTarget = mn_Tar_P\n))\nkable(data.frame(\n  GroupA_mean_KQuota = mn_Quo_A\n  , GroupA_mean_KSales = mn_Sal_A\n  , GroupA_mean_OnTarget = mn_Tar_A\n))\nkable(data.frame(\n  GroupB_mean_KQuota = mn_Quo_B\n  , GroupB_mean_KSales = mn_Sal_B\n  , GroupB_mean_OnTarget = mn_Tar_B\n))\nkable(data.frame(\n  Population_StDev_KQuota = sd_Quo_P\n  , Population_StDev_KSales = sd_Sal_P\n  , Population_StDev_OnTarget = sd_Tar_P\n))\nkable(data.frame(\n  GroupA_StDev_KQuota = sd_Quo_A\n  , GroupA_StDev_KSales = sd_Sal_A\n  , GroupA_StDev_OnTarget = sd_Tar_A\n))\nkable(data.frame(\n  GroupB_StDev_KQuota = sd_Quo_B\n  , GroupB_StDev_KSales = sd_Sal_B\n  , GroupB_StDev_OnTarget = sd_Tar_B\n))\n(clusterMembers <- list(\n  \"cluster1\" = (1:422)[cluster1]\n  , \"cluster2\" = (1:422)[cluster2]\n  , \"cluster3\" = (1:422)[cluster3]))\n",
    "created" : 1452759344345.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3884812223",
    "id" : "AAB47869",
    "lastKnownWriteTime" : 1452773060,
    "path" : "D:/github/TC_SalesQuotas/TC_SalesQuota_UtilityCode.R",
    "project_path" : "TC_SalesQuota_UtilityCode.R",
    "properties" : {
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "type" : "r_source"
}